{##
 # This file is part of the SgDatatablesBundle package.
 #
 # (c) stwe <https://github.com/stwe/DatatablesBundle>
 #
 # For the full copyright and license information, please view the LICENSE
 # file that was distributed with this source code.
 #}
{% set filter_input_type %}
    type="{{ column.filter.type }}"
{% endset %}

{%- set filter_id_selector -%}
    sg-datatables-{{ datatable_name }}-{{ position }}-filter-{{ column.index }}
{%- endset -%}

{%- set filter_selector -%}
    id="{{ filter_id_selector }}"
{%- endset -%}

{% set filter_classes %}
    class="sg-datatables-individual-filtering form-control {% if column.filter.classes is not same as(null) %} {{ column.filter.classes }}{% endif %}"
{% endset %}

{% set filter_width %}
    {% if column.width is not same as(null) %}style="width:{{ column.width }};"{% endif %}
{% endset %}

{% set filter_input_placeholder %}
    {% if column.filter.placeholder is same as(true) %}
        placeholder="{% if column.filter.placeholderText is not same as(null) %}{{ column.filter.placeholderText }}{% else %}{{ column.title|striptags|trim }}{% endif %}"
    {% endif %}
{% endset %}

{% set filter_search_column_index %}
    data-search-column-index="{{ search_column_index }}"
{% endset %}

{% set filter_column_name %}
    {% if column.name is not same as(null) %}name="{{ column.name }}"{% endif %}
{% endset %}

{% set filter_input_initial_search %}
    {% if column.filter.initialSearch %}value="{{ column.filter.initialSearch }}"{% endif %}
{% endset %}

{%- set cancel_button_id_selector -%}
    sg-datatables-{{ datatable_name }}-{{ position }}-filter-cancel-{{ column.index }}
{%- endset -%}

{% set cancel_button_html %}
    {% if true == column.filter.cancelButton %}
        <span class="input-group-btn">
            <a id="{{ cancel_button_id_selector }}" class="btn btn-circle btn-icon-only font-lg cancel-filter" href="javascript:;">
                <i class="icon-close" style=""></i>
            </a>
        </span>

    {% endif %}
{% endset %}

{% set cancel_button_js %}
    {% if true == column.filter.cancelButton %}
        <script type="text/javascript">
            $("#{{ cancel_button_id_selector }}").click(function() {
                if ('' != $("#{{ filter_id_selector }}").val()) {
                    $("#{{ filter_id_selector }}")
                        .val('')
                        .change();
                }
            });
        </script>
    {% endif %}
{% endset %}

{% block html %}
    <div class="input-group margin-bottom-5">
        <input {{ filter_input_type }}            {# type = "text" #}
                {{ filter_selector }}             {# id = "" #}
                {{ filter_classes }}              {# class = "" #}
                {{ filter_width }}                {# style = "width:" #}
                {{ filter_input_placeholder }}    {# placeholder = "" #}
                {{ filter_search_column_index }}  {# data-search-column-index = "" #}
                {{ filter_column_name }}          {# name = "" #}
                {{ filter_input_initial_search }} {# value = "" #}
        />
        {{ cancel_button_html }}
    </div>
{% endblock %}

{% block javascript %}
    <script type="text/javascript">
        moment.locale("{{ app.request.locale }}");
        $("#{{ filter_id_selector }}").daterangepicker({
            autoUpdateInput: false,


            opens: (App.isRTL() ? 'left' : 'right'),
            showWeekNumbers: true,
            timePicker: false,
            timePickerIncrement: 1,
            timePicker12Hour: true,
            ranges: {
                'Hoy': [moment(), moment()],
                'Ayer': [moment().subtract('days', 1), moment().subtract('days', 1)],
                'Últimos 7 Días': [moment().subtract('days', 6), moment()],
                'Últimos 30 Días': [moment().subtract('days', 29), moment()],
                'Este Mes': [moment().startOf('month'), moment().endOf('month')],
                'Mes Pasado': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')],
                'Últimos 3 Años': [moment().subtract('year', 2).startOf('year'), moment().endOf('year')]
            },
            buttonClasses: ['btn'],
            applyClass: 'green',
            cancelClass: 'default',
            format: 'MM/DD/YYYY',
            separator: ' to ',
            locale: {
                applyLabel: 'Aplicar',
                fromLabel: 'Desde',
                toLabel: 'Hasta',
                customRangeLabel: 'Nuevo rango',
                daysOfWeek: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Dicimbre'],
                firstDay: 1
            }


        }).on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
            $(this).change();
          })
          .on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format("{{ 'sg.datatables.daterange.format'|trans({}, 'messages') }}") + ' - ' + picker.endDate.format("{{ 'sg.datatables.daterange.format'|trans({}, 'messages') }}"));
                $(this).change();
          });
    </script>
    {{ cancel_button_js }}
{% endblock %}
