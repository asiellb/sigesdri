<?php

namespace DRI\ExitBundle\Repository;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\Query\AST\Functions\FunctionNode;
use DRI\ExitBundle\Entity\Application;

/**
 * ApplicationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ApplicationRepository extends \Doctrine\ORM\EntityRepository
{

    public function getAppsCreatedAtWithEvenAcount(){
        $em = $this->getEntityManager();

        $qb = $this->createQueryBuilder('a');
        $qb
            ->select('partial a.{id,createdAt}')
            ->leftJoin('a.missions','m')
            ->leftJoin('m.economics','e')
            ->andWhere('a.used = :used')
            ->andWhere('e.eventAcount = :eventAcount')
        ;

        $qb->setParameter('used', false);
        $qb->setParameter('eventAcount', true);

        $apps = $qb->getQuery()->setHint(Query::HINT_FORCE_PARTIAL_LOAD, true)->getArrayResult();

        return $apps;
    }

    public function getAppsForYearWithEvenAcount($year){
        $em = $this->getEntityManager();

        $qb = $this->createQueryBuilder('a');
        $qb->select('a')
            ->leftJoin('a.missions','m')
            ->leftJoin('m.economics','e')
            ->where('YEAR(a.createdAt) = :year')
            ->andWhere('a.used = :used')
            ->andWhere('e.eventAcount = :eventAcount')
        ;

        $qb->setParameter('year', $year);
        $qb->setParameter('used', false);
        $qb->setParameter('eventAcount', true);

        $apps = $qb->getQuery()->getResult();

        return $apps;
    }

    public function getDeparturesForClientInLastYears($client, $year = null){
        $em = $this->getEntityManager();

        $qb = $this->createQueryBuilder('a');
        $qb->select('a')
            ->leftJoin('a.departure','d')
            ->where('YEAR(d.departureDate) >= :year')
            ->andWhere('a.client = :client')
            ->andWhere('a.used = :used')
            ->orderBy('a.exitDate','ASC')
        ;

        if(!$year){$year = 0;}

        $currentYear = date('Y') - $year;
        $lastYears  = date_create_from_format('d/m/Y','01/01/'.$currentYear);

        $qb->setParameter('year', $lastYears);
        $qb->setParameter('client', $client);
        $qb->setParameter('used', true);

        $apps = $qb->getQuery()->getResult();

        return $apps;
    }


}
